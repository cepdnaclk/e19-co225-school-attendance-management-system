[{"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\index.js":"1","C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\serviceWorker.js":"2","C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\App.js":"3","C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\components\\login.js":"4","C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\containers\\index.js":"5","C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\components\\signup.js":"6"},{"size":520,"mtime":1688205803405,"results":"7","hashOfConfig":"8"},{"size":5227,"mtime":1688205803405,"results":"9","hashOfConfig":"8"},{"size":228,"mtime":1688248962158,"results":"10","hashOfConfig":"8"},{"size":4101,"mtime":1688299036829,"results":"11","hashOfConfig":"8"},{"size":1624,"mtime":1688219549523,"results":"12","hashOfConfig":"8"},{"size":5242,"mtime":1688248975178,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1n3kznk",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"17"},"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\index.js",[],[],[],"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\serviceWorker.js",[],[],"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\App.js",[],[],"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\components\\login.js",[],[],"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\containers\\index.js",[],[],"C:\\Users\\acer\\OneDrive\\Documents\\Java\\JavaProject\\e19-co225-school-attendance-management-system\\Login\\src\\components\\signup.js",["34"],[],"import React from 'react'\r\nimport { Grid, Paper, Avatar, Typography, TextField, Button } from '@material-ui/core'\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { FormHelperText } from '@material-ui/core'\r\nimport * as Yup from 'yup'\r\nconst Signup = () => {\r\n    const paperStyle = { padding: 20, width: 300, margin: \"0 auto\" }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\r\n    const marginTop = { marginTop: 5 }\r\n    const initialValues = {\r\n        name: '',\r\n        email: '',\r\n        gender: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        termsAndConditions: false\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        email: Yup.string().email(\"Enter valid email\").required(\"Required\"),\r\n        gender: Yup.string().oneOf([\"male\", \"female\"], \"Required\").required(\"Required\"),\r\n        phoneNumber: Yup.number().typeError(\"Enter valid Phone Number\").required('Required'),\r\n        password: Yup.string().min(8, \"Password minimum length should be 8\").required(\"Required\"),\r\n        confirmPassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matched\").required(\"Required\"),\r\n        termsAndConditions: Yup.string().oneOf([\"true\"], \"Accept terms & conditions\")\r\n    })\r\n    const onSubmit = (values, props) => {\r\n        console.log(values)\r\n        console.log(props)\r\n        setTimeout(() => {\r\n\r\n            props.resetForm()\r\n            props.setSubmitting(false)\r\n        }, 2000)\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Paper style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>\r\n                        <AddCircleOutlineOutlinedIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle}>Sign Up</h2>\r\n                    <Typography variant='caption' gutterBottom>Please fill this form to create an account !</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form>\r\n\r\n                            <Field as={TextField} fullWidth name=\"name\" label='Name'\r\n                                placeholder=\"Enter your name\" helperText={<ErrorMessage name=\"name\" />} />\r\n                            <Field as={TextField} fullWidth name=\"email\" label='Email'\r\n                                placeholder=\"Enter your email\" helperText={<ErrorMessage name=\"email\" />} />\r\n                            <FormControl component=\"fieldset\" style={marginTop}>\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                < Field as={RadioGroup} aria-label=\"gender\" name=\"gender\" name=\"gender\" style={{ display: 'initial' }}>\r\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                </ Field>\r\n                            </FormControl>\r\n                            <FormHelperText><ErrorMessage name=\"gender\" /></FormHelperText>\r\n                            <Field as={TextField} fullWidth name=\"phoneNumber\" label='Phone Number'\r\n                                placeholder=\"Enter your phone number\" helperText={<ErrorMessage name=\"phoneNumber\" />} />\r\n                            <Field as={TextField} fullWidth name='password' type=\"password\"\r\n                                label='Password' placeholder=\"Enter your password\"\r\n                                helperText={<ErrorMessage name=\"password\" />} />\r\n                            <Field as={TextField} fullWidth name=\"confirmPassword\" type=\"password\"\r\n                                label='Confirm Password' placeholder=\"Confirm your password\"\r\n                                helperText={<ErrorMessage name=\"confirmPassword\" />} />\r\n                            <FormControlLabel\r\n                                control={<Field as={Checkbox} name=\"termsAndConditions\" />}\r\n                                label=\"I accept the terms and conditions.\"\r\n                            />\r\n                            <FormHelperText><ErrorMessage name=\"termsAndConditions\" /></FormHelperText>\r\n                            <Button type='submit' variant='contained' disabled={props.isSubmitting}\r\n                                color='primary'>{props.isSubmitting ? \"Loading\" : \"Sign up\"}</Button>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signup;",{"ruleId":"35","severity":1,"message":"36","line":65,"column":91,"nodeType":"37","messageId":"38","endLine":65,"endColumn":104},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]